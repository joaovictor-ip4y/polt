name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'

      - name: Install dependencies
        run: composer install

      - name: Run tests with coverage
        run: |
          mkdir -p build/logs
          vendor/bin/phpunit --coverage-clover build/logs/clover.xml | tee test-results.txt

      - name: Parse test results
        run: |
          PASSED=$(grep -oP '(?<=OK \()\d+(?=\))' test-results.txt || echo 0)
           FAILED=$(grep -oP '(?<=Failures: )\d+' test-results.txt || echo 0)
             SKIPPED=$(grep -oP '(?<=Skipped: )\d+' test-results.txt || echo 0)
            PENDING=0
            OTHER=0
            FLAKY=0
            TOTAL=$((PASSED + FAILED + SKIPPED + PENDING + OTHER + FLAKY))
            DURATION="00:00:$(grep -oP '(?<=Time: )\d+' test-results.txt || echo 10)"
        
            echo "TEST_SUMMARY=Tests: $TOTAL, Passed: $PASSED, Failed: $FAILED, Skipped: $SKIPPED, Pending: $PENDING, Other: $OTHER, Flaky: $FLAKY, Duration: $DURATION" >> $GITHUB_ENV
        
      - name: Comment test results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const summary = process.env.TEST_SUMMARY;
            const runId = context.runId;
            const prNumber = context.payload.pull_request.number;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `### Test Summary - [Run #${runId}](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${runId}) ðŸš€\n\n${summary}`
            });

  cd:
    name: Continuous Delivery
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t my-php-app .

      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Tag and Push Docker image
        run: |
          docker tag my-php-app ${{ secrets.DOCKER_USERNAME }}/my-php-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-php-app:latest

      - name: Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /caminho/do/projeto/no/servidor
            git pull origin main
            composer install --no-dev --optimize-autoloader
            docker-compose down
            docker-compose up -d --build
          EOF
