name: Deploy com Dupla Aprovação

on:
  push:
    branches:
      

jobs:
  check-user:
    runs-on: ubuntu-latest
    outputs:
      is_admin: ${{ steps.check.outputs.is_admin }}
    steps:
      - name: Verificar se usuário é administrador
        id: check
        run: |
          ADMINS="joaovictor-ip4y outro-admin" # Lista de admins
          if echo "$ADMINS" | grep -w "$GITHUB_ACTOR"; then
            echo "is_admin=true" >> $GITHUB_ENV
            echo "::set-output name=is_admin::true"
          else
            echo "is_admin=false" >> $GITHUB_ENV
            echo "::set-output name=is_admin::false"
          fi

  request-first-approval:
    needs: check-user
    if: needs.check-user.outputs.is_admin == 'false'
    runs-on: ubuntu-latest
    environment:
      name: Primeira-Aprovacao
    outputs:
      approver: ${{ github.actor }}  # Captura quem aprovou
    steps:
      - name: Aguardando primeira aprovação
        run: echo "Primeira aprovação concedida por $GITHUB_ACTOR"

  request-second-approval:
    needs: request-first-approval
    runs-on: ubuntu-latest
    if: needs.request-first-approval.outputs.approver != 'joaovictor-ip4y' && needs.request-first-approval.outputs.approver != 'outro-admin'
    environment:
      name: Segunda-Aprovacao
    steps:
      - name: Aguardando segunda aprovação
        run: echo "Segunda aprovação necessária..."

  deploy:
    needs: [check-user, request-second-approval]
    if: needs.check-user.outputs.is_admin == 'true' || success()
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
      - name: Executar Deploy
        run: echo "Deploy realizado!"
